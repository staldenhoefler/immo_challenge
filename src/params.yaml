## Parameters for DataPipeline

columns_to_drop_all: [
'Unnamed: 0.1', 'Unnamed: 0','Municipality','Living space',
'Plot area','Floor space','location','description',
'detailed_description','url','table','detail_responsive#municipality',
'detail_responsive#surface_living','detail_responsive#floor','detail_responsive#available_from',
'Gemeinde','Wohnfläche','Stockwerk','Nutzfläche','Verfügbarkeit','Grundstücksfläche',
'detail_responsive#surface_property','Commune','Surface habitable','Surface du terrain',
'Surface utile','Disponibilité','Étage','Comune','Superficie abitabile','Disponibilità',
'Piano','Superficie del terreno','Superficie utile','Municipality_merged',
'Floor_merged','Living_space_merged','Plot_area_merged','Availability_merged','location_parsed',
'title','price','address','link',
'details_structured',
'index',
'Locality','Zip',
'rooms',
'Floor_unified','Living_area_unified','space',
'price_s','address_s','Surface living:','Land area:',
'description_detailed','Floor space:','Volume:','plz','Number of toilets:','Gross yield:',
'Minimum floor space:','space_cleaned',

# Temporary columns
'Gross return',
'details',
'Room height:',
 'features',
'type',
'provider' ,
#'type_unified',
#'Availability',
#'Floor',
#'detail_responsive#surface_usable',
#'Floor_space_merged',
'lat',
'lon',
#'ForestDensityL',
#'ForestDensityM',
#'ForestDensityS',
'Latitude',
'Longitude',
#'NoisePollutionRailwayL',
#'NoisePollutionRailwayM',
#'NoisePollutionRailwayS',
#'NoisePollutionRoadL',
#'NoisePollutionRoadM',
#'NoisePollutionRoadS',
#'PopulationDensityL',
#'PopulationDensityM',
#'PopulationDensityS',
#'RiversAndLakesL',
#'RiversAndLakesM',
#'RiversAndLakesS',
#'WorkplaceDensityL',
#'WorkplaceDensityM',
#'WorkplaceDensityS',
#'distanceToTrainStation',
#'gde_area_agriculture_percentage',
#'gde_area_forest_percentage',
#'gde_area_nonproductive_percentage',
#'gde_area_settlement_percentage',
#'gde_average_house_hold',
#'gde_empty_apartments',
#'gde_foreigners_percentage',
#'gde_new_homes_per_1000',
#'gde_politics_bdp',
#'gde_politics_cvp',
#'gde_politics_evp',
#'gde_politics_fdp',
#'gde_politics_glp',
#'gde_politics_gps',
#'gde_politics_pda',
#'gde_politics_rights',
#'gde_politics_sp',
#'gde_politics_svp',
#'gde_pop_per_km2',
#'gde_population',
#'gde_private_apartments',
#'gde_social_help_quota',
#'gde_tax',
#'gde_workers_sector1',
#'gde_workers_sector2',
#'gde_workers_sector3',
#'gde_workers_total',
'plz_parsed',
#'No. of rooms:',
'Number of apartments:',
#'Last refurbishment:',
#'Number of floors:',
#'Year built:',
#'Space extracted',
#'Plot_area_unified',

]
clusterGroups: 50
price_threshold: 15000
price_threshold_upper: 100_000_000_000


## Parameters for pytorch model
optimizer: 'SGD' # 'Adam' or 'SGD'
loss_function: 'MSELoss' # 'MSELoss', 'CrossEntropyLoss' usw.
epochs: 500
y_column: 'price_cleaned'
batch_size: [16]
learning_rates: [0.0001]
train_val_test_split: [0.8, 0.0, 0.2]
shufle: [True, False, False]
